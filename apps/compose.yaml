services:
  database:
    image: mariadb:10-focal
    command: '--default-authentication-plugin=mysql_native_password'
    restart: always
    healthcheck:
      test: ['CMD-SHELL', 'mysqladmin ping -h 127.0.0.1 --password=${MARIADB_ROOT_PASSWORD} --silent']
      interval: 3s
      retries: 5
      start_period: 30s
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - dbnet
    environment:
      - MARIADB_DATABASE=devops_training
      - MARIADB_ROOT_PASSWORD=${MARIADB_ROOT_PASSWORD}
    expose:
      - 3306
      - 33060

# BACKEND SERVICES
  backend-app:
    # image: frantkich/devops-training-backend-app:latest
    build:
      context: backend
      dockerfile: Containerfile
    restart: always
    environment:
      - FLASK_DEBUG=1
      - MARIADB_ROOT_PASSWORD=${MARIADB_ROOT_PASSWORD}
    networks:
      - backnet
      - dbnet
    depends_on:
      database:
        condition: service_healthy

  backend-proxy:
    hostname: devops-training-backend
    image: nginx:1.13-alpine
    restart: always
    depends_on: 
      - backend-app
    networks:
      - backnet
    environment:
      NGINX_CONFIG: |
        # Nginx configuration for frontend proxy
        # Think to edit helm chart too
        server {
            listen       80;
            server_name  backend-proxy localhost;
            location / {
                proxy_pass   http://backend-app:8000;
            }
        }
    command:
      /bin/sh -c "echo \"$$NGINX_CONFIG\" > /etc/nginx/conf.d/default.conf; nginx -g \"daemon off;\""

# FRONTEND SERVICES
  frontend-app:
    # image: frantkich/devops-training-frontend-app:latest
    build:
      context: frontend
      dockerfile: Containerfile
    restart: always
    environment:
      - FLASK_DEBUG=1
    networks:
      - backnet
      - frontnet
    depends_on:
      - backend-app

  frontend-proxy:
    image: nginx:1.13-alpine
    restart: always
    ports:
      - 8080:80
    depends_on: 
      - frontend-app
    networks:
      - frontnet
    environment:
      NGINX_CONFIG: |
        # Nginx configuration for frontend proxy
        # Think to edit helm chart too
        server {
          listen       80;
          server_name  frontend-proxy localhost;
          location / {
            proxy_pass   http://frontend-app:8000;
          }
        }
    command:
      /bin/sh -c "echo \"$$NGINX_CONFIG\" > /etc/nginx/conf.d/default.conf; nginx -g \"daemon off;\""

# END OF SERVICES

volumes:
  db-data:

networks:
  backnet:
  frontnet:
  dbnet: